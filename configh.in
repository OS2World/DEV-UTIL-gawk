/* configh.in.  Generated automatically from configure.in by autoheader.  */
/*
 * acconfig.h -- configuration definitions for gawk.
 */

/*
 * Copyright (C) 1995-2001 the Free Software Foundation, Inc.
 *
 * This file is part of GAWK, the GNU implementation of the
 * AWK Programming Language.
 *
 * GAWK is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * GAWK is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
 */



#undef REGEX_MALLOC	/* use malloc instead of alloca in regex.c */
#undef SPRINTF_RET	/* return type of sprintf */
#undef HAVE_MKTIME	/* we have the mktime function */
#undef HAVE_SOCKETS	/* we have sockets on this system */
#undef HAVE_PORTALS	/* we have portals on /p on this system */
#undef DYNAMIC		/* allow dynamic addition of builtins */
#undef STRTOD_NOT_C89	/* strtod doesn't have C89 semantics */
#undef ssize_t		/* signed version of size_t */


#include<stdlib.h>

#include<errno.h>

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define if using `alloca.c'. */
#undef C_ALLOCA

/* EMX needs _chdir2() */
#undef EMX_REPLACE_CHDIR

/* EMX needs _getcwd2() */
#undef EMX_REPLACE_GETCWD

/* Define to 1 if NLS is requested. */
#undef ENABLE_NLS

/* Define to the type of elements in the array set by `getgroups'. Usually
   this is either `int' or `gid_t'. */
#undef GETGROUPS_T

/* Define if the `getpgrp' function takes no argument. */
#undef GETPGRP_VOID

/* Define if you have the `alarm' function. */
#undef HAVE_ALARM

/* Define if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
#undef HAVE_ALLOCA_H

/* Define if you have the <argz.h> header file. */
#undef HAVE_ARGZ_H

/* Define as 1 if you have catgets and don't want to use GNU gettext. */
#undef HAVE_CATGETS

/* Define if you have the `chdir' function. */
#undef HAVE_CHDIR

/* Define if you have the `chown' function. */
#undef HAVE_CHOWN

/* Define if you have the `dcgettext' function. */
#undef HAVE_DCGETTEXT

/* Define if you don't have `vprintf' but do have `_doprnt.' */
#undef HAVE_DOPRNT

/* Define if you have the `fchown' function. */
#undef HAVE_FCHOWN

/* Define if you have the <fcntl.h> header file. */
#undef HAVE_FCNTL_H

/* Define if you have the `fmod' function. */
#undef HAVE_FMOD

/* Define if you have the `getcwd' function. */
#undef HAVE_GETCWD

/* Define if you have the `getpagesize' function. */
#undef HAVE_GETPAGESIZE

/* Define if you have the `getpgrent' function. */
#undef HAVE_GETPGRENT

/* Define to 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT

/* Define if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if you have the `lchown' function. */
#undef HAVE_LCHOWN

/* Define if your locale.h file contains LC_MESSAGES. */
#undef HAVE_LC_MESSAGES

/* Define if you have the `i' library (-li). */
#undef HAVE_LIBI

/* Define if you have the `intl' library (-lintl). */
#undef HAVE_LIBINTL

/* Define if you have the <libintl.h> header file. */
#undef HAVE_LIBINTL_H

/* Define if you have the `m' library (-lm). */
#undef HAVE_LIBM

/* Define if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define if you have the `link' function. */
#undef HAVE_LINK

/* Define if you have the <locale.h> header file. */
#undef HAVE_LOCALE_H

/* Define if you have the `lstat' function. */
#undef HAVE_LSTAT

/* Define if you have the <malloc.h> header file. */
#undef HAVE_MALLOC_H

/* Define if you have the <mcheck.h> header file. */
#undef HAVE_MCHECK_H

/* Define if you have the `memcmp' function. */
#undef HAVE_MEMCMP

/* Define if you have the `memcpy' function. */
#undef HAVE_MEMCPY

/* Define if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define if you have the `memset' function. */
#undef HAVE_MEMSET

/* Define if you have the `mkfifo' function. */
#undef HAVE_MKFIFO

/* Define if you have the `mknod' function. */
#undef HAVE_MKNOD

/* Define if you have a working `mmap' system call. */
#undef HAVE_MMAP

/* Define if you have the `munmap' function. */
#undef HAVE_MUNMAP

/* Define if you have the <netdb.h> header file. */
#undef HAVE_NETDB_H

/* Define if you have the <netinet/in.h> header file. */
#undef HAVE_NETINET_IN_H

/* Define if you have the <nl_types.h> header file. */
#undef HAVE_NL_TYPES_H

/* Define if you have the <os2.h> header file. */
#undef HAVE_OS2_H

/* Define if you have the `putenv' function. */
#undef HAVE_PUTENV

/* Define if you have the `readlink' function. */
#undef HAVE_READLINK

/* Define if you have the `setenv' function. */
#undef HAVE_SETENV

/* Define if you have the `setlocale' function. */
#undef HAVE_SETLOCALE

/* Define if you have the <signum.h> header file. */
#undef HAVE_SIGNUM_H

/* Define if you have the `stat' function. */
#undef HAVE_STAT

/* Define if you have the <stdarg.h> header file. */
#undef HAVE_STDARG_H

/* Define if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the stpcpy function. */
#undef HAVE_STPCPY

/* Define if you have the `strcasecmp' function. */
#undef HAVE_STRCASECMP

/* Define if you have the `strchr' function. */
#undef HAVE_STRCHR

/* Define if you have the `strdup' function. */
#undef HAVE_STRDUP

/* Define if you have the `strerror' function. */
#undef HAVE_STRERROR

/* Define if you have the `strftime' function. */
#undef HAVE_STRFTIME

/* Define if you have the `stricmp' function. */
#undef HAVE_STRICMP

/* Define if cpp supports the ANSI # stringizing operator. */
#undef HAVE_STRINGIZE

/* Define if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define if you have the `strncasecmp' function. */
#undef HAVE_STRNCASECMP

/* Define if you have the `strnicmp' function. */
#undef HAVE_STRNICMP

/* Define if you have the `strtod' function. */
#undef HAVE_STRTOD

/* Define if `st_blksize' is member of `struct stat'. */
#undef HAVE_STRUCT_STAT_ST_BLKSIZE

/* Define if `tm_zone' is member of `struct tm'. */
#undef HAVE_STRUCT_TM_TM_ZONE

/* Define if your `struct stat' has `st_blksize'. Deprecated, use
   `HAVE_STRUCT_STAT_ST_BLKSIZE' instead. */
#undef HAVE_ST_BLKSIZE

/* Define if you have the `symlink' function. */
#undef HAVE_SYMLINK

/* Define if you have the `sync' function. */
#undef HAVE_SYNC

/* Define if you have the `system' function. */
#undef HAVE_SYSTEM

/* Define if you have the <sys/nls.h> header file. */
#undef HAVE_SYS_NLS_H

/* Define if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

/* Define if you have the <sys/socket.h> header file. */
#undef HAVE_SYS_SOCKET_H

/* Define if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define if you have <sys/wait.h> that is POSIX.1 compatible. */
#undef HAVE_SYS_WAIT_H

/* Define if your `struct tm' has `tm_zone'. Deprecated, use
   `HAVE_STRUCT_TM_TM_ZONE' instead. */
#undef HAVE_TM_ZONE

/* Define if you don't have `tm_zone' but do have the external array `tzname'.
   */
#undef HAVE_TZNAME

/* Define if you have the `tzset' function. */
#undef HAVE_TZSET

/* Define if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define if you have the `vprintf' function. */
#undef HAVE_VPRINTF

/* Define if you have the `_chdir2' function. */
#undef HAVE__CHDIR2

/* Define if you have the `_getcwd2' function. */
#undef HAVE__GETCWD2

/* Define if you have the `_nls_init' function. */
#undef HAVE__NLS_INIT

/* Define if you have the `_response' function. */
#undef HAVE__RESPONSE

/* Define if you have the `_wildcard' function. */
#undef HAVE__WILDCARD

/* Define if you have the `__argz_count' function. */
#undef HAVE___ARGZ_COUNT

/* Define if you have the `__argz_next' function. */
#undef HAVE___ARGZ_NEXT

/* Define if you have the `__argz_stringify' function. */
#undef HAVE___ARGZ_STRINGIFY

/* Name of package */
#undef PACKAGE

/* Define if compiler has function prototypes */
#undef PROTOTYPES

/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
        STACK_DIRECTION > 0 => grows toward higher addresses
        STACK_DIRECTION < 0 => grows toward lower addresses
        STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION

/* Define if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>. */
#undef TIME_WITH_SYS_TIME

/* Define if your <sys/time.h> declares `struct tm'. */
#undef TM_IN_SYS_TIME

/* Version number of package */
#undef VERSION

/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif

/* If libc does not support chown(), replace it by a dummy function */
#if !HAVE_CHOWN && !defined chown
static inline int replace_chown(x,y,z) { errno = EPERM; return -1; }
#define chown(x,y,z) replace_chown(x,y,z)
#endif

/* If libc does not support fchown(), replace it by a dummy function */
#if !HAVE_FCHOWN && !defined fchown
static inline int replace_fchown(x,y,z) { errno = EPERM; return -1; }
#define fchown(x,y,z) replace_fchown(x,y,z)
#endif

/* If libc does not support lchown(), replace it by chown */
#if !HAVE_LCHOWN && !defined lchown
static inline int replace_lchown(x,y,z) { errno = EPERM; return -1; }
#define lchown(x,y,z) replace_lchown(x,y,z)
#endif

/* If libc does not support link(), replace it by a dummy function */
#if !HAVE_LINK && !defined link
static inline int replace_link(x,y) { errno = EPERM; return -1; }
#define link(x,y) replace_link(x,y)
#endif

/* If libc does not support lstat(), replace it by stat() (EMX only) */
#if !HAVE_LSTAT && HAVE_STAT && !defined lstat
# define lstat(x, y) stat(x, y)
#endif

/* If libc does not support mkfifo(), replace it by a dummy function */
#if !HAVE_MKFIFO && !defined mkfifo
static inline int replace_mkfifo(x,y) { errno = EPERM; return -1; }
#define mkfifo(x,y) replace_mkfifo(x,y)
#endif

/* If libc does not support mknod(), replace it by a dummy function */
#if !HAVE_MKNOD && !defined mknod
static inline int replace_mknod(x,y,z) { errno = EPERM; return -1; }
#define mknod(x,y,z) replace_mknod(x,y,z)
#endif

/* If libc does not support readlink(), replace it by a dummy function */
#if !HAVE_READLINK && !defined readlink
static inline int replace_readlink(x,y,z) { errno = EPERM; return -1; }
#define readlink(x,y,z) replace_readlink(x,y,z)
#endif

/* Replace strcasecmp() by stricmp() if necessary (EMX only) */
#if !HAVE_STRCASECMP && HAVE_STRICMP && !defined strcasecmp
# define strcasecmp(x,y) stricmp(x,y)
#endif

/* Replace strncasecmp() by strnicmp() if necessary (EMX only) */
#if !HAVE_STRNCASECMP && HAVE_STRNICMP && !defined strncasecmp
# define strncasecmp(x,y,z) strnicmp(x,y,z)
#endif

/* If libc does not support symlink(), replace it by a dummy function */
#if !HAVE_SYMLINK && !defined symlink
static inline int replace_symlink(x,y) { errno = EPERM; return -1; }
#define symlink(x,y) replace_symlink(x,y)
#endif

/* If libc does not support sync(), replace it by an empty macro */
#if !HAVE_SYNC && !defined sync
#define sync() {}
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#undef _FILE_OFFSET_BITS

#if HAVE__RESPONSE && defined __EMX__
# define _EMX_RESPONSE(a, b) _response(a, b)
#else
# define _EMX_RESPONSE(a, b)
#endif

#if HAVE__WILDCARD && defined __EMX__
# define _EMX_WILDCARD(a, b) _wildcard(a, b)
#else
# define _EMX_WILDCARD(a,, b)
#endif

#if HAVE_SYS_NLS_H && HAVE__NLS_INIT
#include<sys/nls.h>
# define TOUPPER(x) _nls_toupper(x)
# define TOLOWER(x) _nls_tolower(x)
#endif

#if (HAVE__RESPONSE || HAVE__WILDCARD) && !defined initialize_main
# define initialize_main(pargc, pargv) { \
_EMX_RESPONSE(pargc, pargv); _EMX_WILDCARD(pargc, pargv); }
#endif

/* Define for large files, on AIX-style hosts. */
#undef _LARGE_FILES

/* Define if on MINIX. */
#undef _MINIX

/* Define if the system does not provide POSIX.1 features except with this
   defined. */
#undef _POSIX_1_SOURCE

/* Define if you need to in order for `stat' and other things to work. */
#undef _POSIX_SOURCE

/* Define if type `char' is unsigned and you are not using gcc.  */
#ifndef __CHAR_UNSIGNED__
# undef __CHAR_UNSIGNED__
#endif

/* Replace chdir() by _chdir2() if necessary (EMX only) */
#if defined EMX_REPLACE_CHDIR && !defined chdir
#define chdir replace_chdir
static inline int replace_chdir(const char *name) { return _chdir2(name); }
#endif

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Replace getcwd() by _getcwd2() if necessary (EMX only) */
#if defined EMX_REPLACE_GETCWD && !defined getcwd
#define getcwd replace_getcwd
static inline char* replace_getcwd(char *buffer, size_t size) { return _getcwd2(buffer, size); }
#endif

/* Define to `int' if <sys/types.h> doesn't define. */
#undef gid_t

/* Define as `__inline' if that's what the C compiler calls it, or to nothing
   if it is not supported. */
#undef inline

/* Define to `long' if <sys/types.h> does not define. */
#undef off_t

/* Define to `int' if <sys/types.h> does not define. */
#undef pid_t

/* Define to `unsigned' if <sys/types.h> does not define. */
#undef size_t

/* ? */
#undef ssize_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef uid_t

#include <custom.h>	/* overrides for stuff autoconf can't deal with */
